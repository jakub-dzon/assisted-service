// Code generated by go-swagger; DO NOT EDIT.

package operators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetOperatorsHostRequirementsReader is a Reader for the GetOperatorsHostRequirements structure.
type GetOperatorsHostRequirementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOperatorsHostRequirementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOperatorsHostRequirementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOperatorsHostRequirementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOperatorsHostRequirementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOperatorsHostRequirementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOperatorsHostRequirementsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOperatorsHostRequirementsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOperatorsHostRequirementsOK creates a GetOperatorsHostRequirementsOK with default headers values
func NewGetOperatorsHostRequirementsOK() *GetOperatorsHostRequirementsOK {
	return &GetOperatorsHostRequirementsOK{}
}

/*GetOperatorsHostRequirementsOK handles this case with default header values.

Success.
*/
type GetOperatorsHostRequirementsOK struct {
	Payload models.OperatorHostRequirementsList
}

func (o *GetOperatorsHostRequirementsOK) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsOK  %+v", 200, o.Payload)
}

func (o *GetOperatorsHostRequirementsOK) GetPayload() models.OperatorHostRequirementsList {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsUnauthorized creates a GetOperatorsHostRequirementsUnauthorized with default headers values
func NewGetOperatorsHostRequirementsUnauthorized() *GetOperatorsHostRequirementsUnauthorized {
	return &GetOperatorsHostRequirementsUnauthorized{}
}

/*GetOperatorsHostRequirementsUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetOperatorsHostRequirementsUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetOperatorsHostRequirementsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOperatorsHostRequirementsUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsForbidden creates a GetOperatorsHostRequirementsForbidden with default headers values
func NewGetOperatorsHostRequirementsForbidden() *GetOperatorsHostRequirementsForbidden {
	return &GetOperatorsHostRequirementsForbidden{}
}

/*GetOperatorsHostRequirementsForbidden handles this case with default header values.

Forbidden.
*/
type GetOperatorsHostRequirementsForbidden struct {
	Payload *models.InfraError
}

func (o *GetOperatorsHostRequirementsForbidden) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsForbidden  %+v", 403, o.Payload)
}

func (o *GetOperatorsHostRequirementsForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsNotFound creates a GetOperatorsHostRequirementsNotFound with default headers values
func NewGetOperatorsHostRequirementsNotFound() *GetOperatorsHostRequirementsNotFound {
	return &GetOperatorsHostRequirementsNotFound{}
}

/*GetOperatorsHostRequirementsNotFound handles this case with default header values.

Not found.
*/
type GetOperatorsHostRequirementsNotFound struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsNotFound) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsNotFound  %+v", 404, o.Payload)
}

func (o *GetOperatorsHostRequirementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsMethodNotAllowed creates a GetOperatorsHostRequirementsMethodNotAllowed with default headers values
func NewGetOperatorsHostRequirementsMethodNotAllowed() *GetOperatorsHostRequirementsMethodNotAllowed {
	return &GetOperatorsHostRequirementsMethodNotAllowed{}
}

/*GetOperatorsHostRequirementsMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type GetOperatorsHostRequirementsMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetOperatorsHostRequirementsMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsInternalServerError creates a GetOperatorsHostRequirementsInternalServerError with default headers values
func NewGetOperatorsHostRequirementsInternalServerError() *GetOperatorsHostRequirementsInternalServerError {
	return &GetOperatorsHostRequirementsInternalServerError{}
}

/*GetOperatorsHostRequirementsInternalServerError handles this case with default header values.

Error.
*/
type GetOperatorsHostRequirementsInternalServerError struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators][%d] getOperatorsHostRequirementsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOperatorsHostRequirementsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
