// Code generated by go-swagger; DO NOT EDIT.

package operators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOperatorsHostRequirementsByNameParams creates a new GetOperatorsHostRequirementsByNameParams object
// with the default values initialized.
func NewGetOperatorsHostRequirementsByNameParams() *GetOperatorsHostRequirementsByNameParams {
	var ()
	return &GetOperatorsHostRequirementsByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOperatorsHostRequirementsByNameParamsWithTimeout creates a new GetOperatorsHostRequirementsByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOperatorsHostRequirementsByNameParamsWithTimeout(timeout time.Duration) *GetOperatorsHostRequirementsByNameParams {
	var ()
	return &GetOperatorsHostRequirementsByNameParams{

		timeout: timeout,
	}
}

// NewGetOperatorsHostRequirementsByNameParamsWithContext creates a new GetOperatorsHostRequirementsByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOperatorsHostRequirementsByNameParamsWithContext(ctx context.Context) *GetOperatorsHostRequirementsByNameParams {
	var ()
	return &GetOperatorsHostRequirementsByNameParams{

		Context: ctx,
	}
}

// NewGetOperatorsHostRequirementsByNameParamsWithHTTPClient creates a new GetOperatorsHostRequirementsByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOperatorsHostRequirementsByNameParamsWithHTTPClient(client *http.Client) *GetOperatorsHostRequirementsByNameParams {
	var ()
	return &GetOperatorsHostRequirementsByNameParams{
		HTTPClient: client,
	}
}

/*GetOperatorsHostRequirementsByNameParams contains all the parameters to send to the API endpoint
for the get operators host requirements by name operation typically these are written to a http.Request
*/
type GetOperatorsHostRequirementsByNameParams struct {

	/*ClusterID
	  The cluster for which the requirements will be computed.

	*/
	ClusterID strfmt.UUID
	/*OperatorName
	  The operator name.

	*/
	OperatorName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) WithTimeout(timeout time.Duration) *GetOperatorsHostRequirementsByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) WithContext(ctx context.Context) *GetOperatorsHostRequirementsByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) WithHTTPClient(client *http.Client) *GetOperatorsHostRequirementsByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) WithClusterID(clusterID strfmt.UUID) *GetOperatorsHostRequirementsByNameParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) SetClusterID(clusterID strfmt.UUID) {
	o.ClusterID = clusterID
}

// WithOperatorName adds the operatorName to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) WithOperatorName(operatorName string) *GetOperatorsHostRequirementsByNameParams {
	o.SetOperatorName(operatorName)
	return o
}

// SetOperatorName adds the operatorName to the get operators host requirements by name params
func (o *GetOperatorsHostRequirementsByNameParams) SetOperatorName(operatorName string) {
	o.OperatorName = operatorName
}

// WriteToRequest writes these params to a swagger request
func (o *GetOperatorsHostRequirementsByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param cluster_id
	qrClusterID := o.ClusterID
	qClusterID := qrClusterID.String()
	if qClusterID != "" {
		if err := r.SetQueryParam("cluster_id", qClusterID); err != nil {
			return err
		}
	}

	// path param operator_name
	if err := r.SetPathParam("operator_name", o.OperatorName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
