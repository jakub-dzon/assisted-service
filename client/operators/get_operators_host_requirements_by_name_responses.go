// Code generated by go-swagger; DO NOT EDIT.

package operators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetOperatorsHostRequirementsByNameReader is a Reader for the GetOperatorsHostRequirementsByName structure.
type GetOperatorsHostRequirementsByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOperatorsHostRequirementsByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOperatorsHostRequirementsByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOperatorsHostRequirementsByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOperatorsHostRequirementsByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOperatorsHostRequirementsByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOperatorsHostRequirementsByNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOperatorsHostRequirementsByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOperatorsHostRequirementsByNameOK creates a GetOperatorsHostRequirementsByNameOK with default headers values
func NewGetOperatorsHostRequirementsByNameOK() *GetOperatorsHostRequirementsByNameOK {
	return &GetOperatorsHostRequirementsByNameOK{}
}

/*GetOperatorsHostRequirementsByNameOK handles this case with default header values.

Success.
*/
type GetOperatorsHostRequirementsByNameOK struct {
	Payload *models.OperatorHostRequirements
}

func (o *GetOperatorsHostRequirementsByNameOK) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameOK  %+v", 200, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameOK) GetPayload() *models.OperatorHostRequirements {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OperatorHostRequirements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsByNameUnauthorized creates a GetOperatorsHostRequirementsByNameUnauthorized with default headers values
func NewGetOperatorsHostRequirementsByNameUnauthorized() *GetOperatorsHostRequirementsByNameUnauthorized {
	return &GetOperatorsHostRequirementsByNameUnauthorized{}
}

/*GetOperatorsHostRequirementsByNameUnauthorized handles this case with default header values.

Unauthorized.
*/
type GetOperatorsHostRequirementsByNameUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetOperatorsHostRequirementsByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsByNameForbidden creates a GetOperatorsHostRequirementsByNameForbidden with default headers values
func NewGetOperatorsHostRequirementsByNameForbidden() *GetOperatorsHostRequirementsByNameForbidden {
	return &GetOperatorsHostRequirementsByNameForbidden{}
}

/*GetOperatorsHostRequirementsByNameForbidden handles this case with default header values.

Forbidden.
*/
type GetOperatorsHostRequirementsByNameForbidden struct {
	Payload *models.InfraError
}

func (o *GetOperatorsHostRequirementsByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameForbidden  %+v", 403, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsByNameNotFound creates a GetOperatorsHostRequirementsByNameNotFound with default headers values
func NewGetOperatorsHostRequirementsByNameNotFound() *GetOperatorsHostRequirementsByNameNotFound {
	return &GetOperatorsHostRequirementsByNameNotFound{}
}

/*GetOperatorsHostRequirementsByNameNotFound handles this case with default header values.

Not found.
*/
type GetOperatorsHostRequirementsByNameNotFound struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsByNameMethodNotAllowed creates a GetOperatorsHostRequirementsByNameMethodNotAllowed with default headers values
func NewGetOperatorsHostRequirementsByNameMethodNotAllowed() *GetOperatorsHostRequirementsByNameMethodNotAllowed {
	return &GetOperatorsHostRequirementsByNameMethodNotAllowed{}
}

/*GetOperatorsHostRequirementsByNameMethodNotAllowed handles this case with default header values.

Method Not Allowed.
*/
type GetOperatorsHostRequirementsByNameMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsByNameMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatorsHostRequirementsByNameInternalServerError creates a GetOperatorsHostRequirementsByNameInternalServerError with default headers values
func NewGetOperatorsHostRequirementsByNameInternalServerError() *GetOperatorsHostRequirementsByNameInternalServerError {
	return &GetOperatorsHostRequirementsByNameInternalServerError{}
}

/*GetOperatorsHostRequirementsByNameInternalServerError handles this case with default header values.

Error.
*/
type GetOperatorsHostRequirementsByNameInternalServerError struct {
	Payload *models.Error
}

func (o *GetOperatorsHostRequirementsByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /host_requirements/operators/{operator_name}][%d] getOperatorsHostRequirementsByNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOperatorsHostRequirementsByNameInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOperatorsHostRequirementsByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
