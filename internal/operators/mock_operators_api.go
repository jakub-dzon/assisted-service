// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openshift/assisted-service/internal/operators (interfaces: API)

// Package operators is a generated GoMock package.
package operators

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	common "github.com/openshift/assisted-service/internal/common"
	api "github.com/openshift/assisted-service/internal/operators/api"
	models "github.com/openshift/assisted-service/models"
	reflect "reflect"
)

// MockAPI is a mock of API interface
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// AnyOperatorEnabled mocks base method
func (m *MockAPI) AnyOperatorEnabled(arg0 *common.Cluster) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AnyOperatorEnabled", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AnyOperatorEnabled indicates an expected call of AnyOperatorEnabled
func (mr *MockAPIMockRecorder) AnyOperatorEnabled(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AnyOperatorEnabled", reflect.TypeOf((*MockAPI)(nil).AnyOperatorEnabled), arg0)
}

// GenerateManifests mocks base method
func (m *MockAPI) GenerateManifests(arg0 *common.Cluster) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateManifests", arg0)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateManifests indicates an expected call of GenerateManifests
func (mr *MockAPIMockRecorder) GenerateManifests(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateManifests", reflect.TypeOf((*MockAPI)(nil).GenerateManifests), arg0)
}

// UpdateDependencies mocks base method
func (m *MockAPI) UpdateDependencies(arg0 *common.Cluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDependencies", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDependencies indicates an expected call of UpdateDependencies
func (mr *MockAPIMockRecorder) UpdateDependencies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDependencies", reflect.TypeOf((*MockAPI)(nil).UpdateDependencies), arg0)
}

// ValidateCluster mocks base method
func (m *MockAPI) ValidateCluster(arg0 context.Context, arg1 *common.Cluster) ([]api.ValidationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCluster", arg0, arg1)
	ret0, _ := ret[0].([]api.ValidationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateCluster indicates an expected call of ValidateCluster
func (mr *MockAPIMockRecorder) ValidateCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCluster", reflect.TypeOf((*MockAPI)(nil).ValidateCluster), arg0, arg1)
}

// ValidateHost mocks base method
func (m *MockAPI) ValidateHost(arg0 context.Context, arg1 *common.Cluster, arg2 *models.Host) ([]api.ValidationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateHost", arg0, arg1, arg2)
	ret0, _ := ret[0].([]api.ValidationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateHost indicates an expected call of ValidateHost
func (mr *MockAPIMockRecorder) ValidateHost(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateHost", reflect.TypeOf((*MockAPI)(nil).ValidateHost), arg0, arg1, arg2)
}
